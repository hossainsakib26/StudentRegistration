@model StudentRegistration.Models.AcademicClass

@{
    ViewBag.Title = "Academic Class Create";
}

@using (Ajax.BeginForm("Create", "AcademicClass", new AjaxOptions()
{
    //OnSuccess = "fnSuccess",
    //OnFailure = "fnFailure",
    HttpMethod = "POST",
    
}, new { id = "ajaxBeginFormForClass" }
))
{

    <div class="col m-sm-0 m-lg-4 p-lg-4" style="background-color: #3c4a5c; color: aliceblue; padding: 20px;">

        <div class="row border-bottom border-3">
            <h3 class="col-lg-2 fs-4 text-white">Create A Class</h3>
            <label id="getMessage"></label>


            @{
                if (ViewBag.FailedMsg != null)
                {
                    <div class="col-lg-8 text-center text-light bg-danger">
                        @ViewBag.FailedMsg
                    </div>
                }
            }



            @{ if (ViewBag.SuccessMsg != null)
                {
                    <div class="col-lg-8 text-center text-light bg-success">
                        @ViewBag.SuccessMsg
                    </div>
                }
            }


        </div>

        @Html.AntiForgeryToken()

        @Html.HiddenFor(c => c.ID)

        <div class="row my-2">
            @Html.LabelFor(c => c.Code, new { @class = "col-lg-3", id = "code" })
            @Html.TextBoxFor(c => c.Code, new { @class = "col-lg-5 form-control bg-light" })
        </div>

        <div class="row my-2">
            @Html.LabelFor(c => c.Name, new { @class = "col-lg-3", id = "name" })
            @Html.TextBoxFor(c => c.Name, new { @class = "col-lg-5 form-control bg-light" })
        </div>

        <div class="row my-2 pt-2 d-lg-flex gap-2">
            <button class="col-lg-2 btn btn-outline-info text-white" type="submit" id="submitForm">Create</button>
            <input class="col-lg-2 btn btn-outline-warning text-white" id="clearForm" value="Clear" type="button" />
        </div>

    </div>
}

<output id="output"></output>

@Scripts.Render("~/bundles/javaScript")